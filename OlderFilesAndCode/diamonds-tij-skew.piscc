#
# original code without mmap, what I hope is the "diamond" tiling, 
# but with original t,i,j order within tiles
#

# Original statements left alone, but put in a 8-d iteration space
# 3 extra dimensions for 3 dimensions of 3d-diamond tiling
T012 := {
  do_init_pong[i,j] -> [0, 0, 0, 0, 0, 0, i, j];
  do_edge_pong[i,j] -> [1, 0, 0, 0, 0, 0, i, j];
  startclock[]      -> [2, 0, 0, 0, 0, 0, 0, 0];
};

# Want to replace k0 with thyme=k0+k1+k2.  All diagonal tiles
# with same value of thyme can execute in parallel.

T3_ping := {
  calc_ping[t,i,j]  -> [3,thyme, k1, k2, t, 0, i, j] :
    exists k0,r0,r1,r2: 0 <=r0<TAU && 0<=r1<SIGMA && 0<=r2<GAMMA
    && thyme=k0+k1+k2
    && TAU*k0+r0 = t+i && SIGMA*k1+r1 = t+j && GAMMA*k2+r2 = t-i-j
};
T3_pong := {
  calc_pong[t,i,j]  -> [3, thyme, k1, k2, t, 0, i, j]:
    exists k0,r0,r1,r2: 0 <=r0<TAU && 0<=r1<SIGMA && 0<=r2<GAMMA
    && thyme=k0+k1+k2
    && TAU*k0+r0 = t+i && SIGMA*k1+r1 = t+j && GAMMA*k2+r2 = t-i-j
};

Trans := T012 + T3_ping + T3_pong;

codegen (Trans * IS_ALL);
#codegen (Trans * IS_ALL) assuming [T,N] -> { : T%2=0 && T>=2 && N>=4 && N>T};


