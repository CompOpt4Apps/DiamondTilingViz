{
  for (c6 = 0; c6 < N; c6 += 1)
    for (c7 = 0; c7 < N; c7 += 1)
      do_init_pong(c6, c7);
  for (c6 = 0; c6 < N; c6 += 1) {
    do_edge_pong(c6, 0);
    if (c6 + 1 == N)
      for (c7 = 1; c7 < N - 1; c7 += 1)
        do_edge_pong(N - 1, c7);
    if (c6 == 0)
      for (c7 = 1; c7 < N - 1; c7 += 1)
        do_edge_pong(0, c7);
    if (N >= 2)
      do_edge_pong(c6, N - 1);
  }
  startclock();
  if (T >= 1) {
    for (c1 = -1; c1 <= (T - 1) / 6; c1 += 1)
      for (c2 = max(max(floord(-N + 3, 12), floord(-N + 6 * c1 - 4, 12) + 1), c1 + floord(-T - N + 1, 12) + 1); c2 <= floord(c1, 2); c2 += 1) {
        for (c3 = max(max(max(6 * c1 - 1, 12 * c2 + 1), -2 * N + 12 * c1 - 12 * c2 + 2 * floord(N + 1, 2) + 1), 1); c3 <= min(min(min(6 * c1 + 10, 12 * c1 - 12 * c2 + 9), N + 12 * c2 + 8), T - 1); c3 += 2) {
          if (c3 >= 6 * c1 + 1)
            for (c5 = max(max(12 * c1 - 12 * c2 - c3, 1), -12 * c2 + c3 - 11); c5 <= min(min(N - 2, 12 * c1 - 12 * c2 - c3 + 11), -12 * c2 + c3); c5 += 1)
              for (c6 = 1; c6 < N - 1; c6 += 1)
                calc_ping(c3, c5, c6);
          for (c5 = max(max(12 * c1 - 12 * c2 - c3 - 1, 1), -12 * c2 + c3 - 10); c5 <= min(min(-12 * c2 + c3 + 1, N - 2), 12 * c1 - 12 * c2 - c3 + 10); c5 += 1)
            for (c6 = 1; c6 < N - 1; c6 += 1)
              calc_pong(c3 + 1, c5, c6);
        }
        if ((T - 1) % 2 == 0 && N + 12 * c2 + 8 >= T && 6 * c1 + 9 >= T) {
          for (c5 = max(max(1, T - 12 * c2 - 11), -T + 12 * c1 - 12 * c2); c5 <= min(min(N - 2, -T + 12 * c1 - 12 * c2 + 11), T - 12 * c2); c5 += 1)
            for (c6 = 1; c6 < N - 1; c6 += 1)
              calc_ping(T, c5, c6);
        } else if (2 * floord(N, 2) == N && 6 * c1 >= N + 12 * c2 && T >= N + 12 * c2 + 9) {
          for (c6 = 1; c6 < N - 1; c6 += 1)
            calc_ping(N + 12 * c2 + 9, N - 2, c6);
        } else if (N + 12 * c2 >= 6 * c1 + 2 && T >= 6 * c1 + 11 && c1 >= 2 * c2 + 1)
          for (c6 = 1; c6 < N - 1; c6 += 1)
            calc_ping(6 * c1 + 11, 6 * c1 - 12 * c2, c6);
      }
    if (T % 6 == 0)
      for (c2 = floord(T - N + 1, 12) + 1; c2 < (T + 6) / 12; c2 += 1)
        for (c6 = 1; c6 < N - 1; c6 += 1)
          calc_pong(T, T - 12 * c2, c6);
  }
}
