{
  for (c6 = 0; c6 < N; c6 += 1)
    for (c7 = 0; c7 < N; c7 += 1)
      do_init_pong(c6, c7);
  for (c6 = 0; c6 < N; c6 += 1) {
    do_edge_pong(c6, 0);
    if (c6 + 1 == N)
      for (c7 = 1; c7 < N - 1; c7 += 1)
        do_edge_pong(N - 1, c7);
    if (c6 == 0)
      for (c7 = 1; c7 < N - 1; c7 += 1)
        do_edge_pong(0, c7);
    if (N >= 2)
      do_edge_pong(c6, N - 1);
  }
  startclock();
  if (N >= 3 && T >= 1)
    if (T >= 2) {
      if ((N - 3) % 9 == 0 && N <= 12)
        calc_ping(1, N - 2, N - 2);
      for (c1 = max(-2, -((N + 5) / 9)); c1 <= min(T / 6, (3 * T + N - 4) / 18); c1 += 1)
        for (c2 = max(max(c1 - (T + 8) / 9 + 1, 0), floord(c1 + 1, 3)); c2 <= min(min(min((2 * N + 9 * c1 + 11) / 27, (N + 6 * c1 + 9) / 18), (T + N - 2) / 18), c1 + floord(N - 6, 18) + 2); c2 += 1)
          for (c3 = max(max(max(max(max(c1 - c2 - (T + N + 16) / 18 + 1, -c2 - (N + 12) / 18 - 1), c1 - 2 * c2 - (N + 14) / 18), c1 - c2 - (N + 6 * c1 + 9) / 18), -((N + 6) / 9)), -c2 + floord(-N + 6 * c1 + 6 * c2 - 4, 12) + 1); c3 <= min(min(min(min(min(-c2 + (T - 1) / 9, c1 - 2 * c2 + floord(N - 4, 18) + 1), (T - 2) / 18), c1 - c2 + floord(-c1 + 1, 3)), c1 - c2), c2); c3 += 1) {
            for (c4 = max(max(max(max(max(max(6 * c1 - 1, 8 * c2 + 8 * c3 + 2 * floord(c2 + c3, 2) + 1), 8 * c1 - 10 * c2 + 2 * floord(c1 + c2, 2) + 1), 18 * c3 + 1), -2 * N + 18 * c2 + 2 * floord(N + 1, 2) + 1), -2 * N + 18 * c1 - 18 * c2 - 18 * c3 + 2 * floord(N + 1, 2) + 1), 1); c4 <= min(min(min(min(min(min(18 * c2 + 15, 2 * N + 18 * c3 + 12), T - 1), 9 * c1 - 9 * c2 + floord(N, 2) + 15), 9 * c2 + 9 * c3 + floord(N, 2) + 15), 6 * c1 + 16), 18 * c1 - 18 * c2 - 18 * c3 + 15); c4 += 2) {
              if (c4 >= 18 * c3 + 3 && c4 >= 6 * c1 + 1)
                for (c6 = max(max(max(-18 * c2 - 18 * c3 + 2 * c4 - 34, -N - 18 * c3 + c4 - 15), 18 * c1 - 18 * c2 - 18 * c3 - c4), 1); c6 <= min(min(min(18 * c1 - 18 * c2 - 18 * c3 - c4 + 17, -18 * c3 + c4 - 1), N - 2), -18 * c2 - 18 * c3 + 2 * c4); c6 += 1)
                  for (c7 = max(max(1, -18 * c3 + c4 - c6 - 17), 18 * c2 - c4); c7 <= min(min(N - 2, 18 * c2 - c4 + 17), -18 * c3 + c4 - c6); c7 += 1)
                    calc_ping(c4, c6, c7);
              for (c6 = max(max(max(18 * c1 - 18 * c2 - 18 * c3 - c4 - 1, 1), -18 * c2 - 18 * c3 + 2 * c4 - 32), -N - 18 * c3 + c4 - 14); c6 <= min(min(min(-18 * c3 + c4, 18 * c1 - 18 * c2 - 18 * c3 - c4 + 16), N - 2), -18 * c2 - 18 * c3 + 2 * c4 + 2); c6 += 1)
                for (c7 = max(max(-18 * c3 + c4 - c6 - 16, 18 * c2 - c4 - 1), 1); c7 <= min(min(-18 * c3 + c4 - c6 + 1, N - 2), 18 * c2 - c4 + 16); c7 += 1)
                  calc_pong(c4 + 1, c6, c7);
            }
            if (18 * c2 >= N + 18 * c3 + 1 && N + 6 * c3 >= 6 * c2 + 3 && T >= 2 * ((N + 18 * c2 + 18 * c3 + 32) / 4) + 2 && 12 * c1 >= N + 18 * c2 + 18 * c3 + 1) {
              for (c6 = max(18 * c1 - 18 * c2 - 18 * c3 - 2 * ((N + 18 * c2 + 18 * c3 + 32) / 4) - 1, -((N + 18 * c2 + 18 * c3 + 32) % 4) + N); c6 < N - 1; c6 += 1)
                for (c7 = -18 * c3 - c6 + 2 * ((N + 18 * c2 + 18 * c3 + 32) / 4) - 16; c7 <= 18 * c2 - 2 * ((N + 18 * c2 + 18 * c3 + 32) / 4) + 16; c7 += 1)
                  calc_ping(8 * c2 + 8 * c3 + 2 * ((N + 2 * c2 + 2 * c3) / 4) + 17, c6, c7);
            } else if (2 * c2 + c3 == c1 && 18 * c2 + 1 >= N + 6 * c1 && T + 36 * c2 >= 2 * N + 18 * c1 + 14)
              calc_ping(2 * N + 18 * c1 - 36 * c2 + 13, N - 2, N - 2);
            if ((T - 1) % 2 == 0 && N + 18 * c1 + 30 >= 2 * T + 18 * c2 && 6 * c1 + 15 >= T) {
              for (c6 = max(max(max(2 * T - 18 * c2 - 18 * c3 - 34, T - N - 18 * c3 - 15), -T + 18 * c1 - 18 * c2 - 18 * c3), 1); c6 <= min(min(min(-T + 18 * c1 - 18 * c2 - 18 * c3 + 17, 2 * T - 18 * c2 - 18 * c3), T - 18 * c3 - 1), N - 2); c6 += 1)
                for (c7 = max(max(T - 18 * c3 - c6 - 17, -T + 18 * c2), 1); c7 <= min(min(T - 18 * c3 - c6, N - 2), -T + 18 * c2 + 17); c7 += 1)
                  calc_ping(T, c6, c7);
            } else if (N + 6 * c2 + 12 * c3 >= 6 * c1 + 2 && 18 * c2 >= N + 6 * c1 + 1 && 18 * c1 >= N + 18 * c2 + 36 * c3 + 1 && T >= 2 * ((N + 18 * c1 - 18 * c2 + 32) / 4) + 1) {
              for (c6 = -N - 18 * c3 + 2 * ((N + 18 * c1 - 18 * c2 + 32) / 4) - 14; c6 <= 18 * c1 - 18 * c2 - 18 * c3 - 2 * ((N + 18 * c1 - 18 * c2 + 32) / 4) + 16; c6 += 1)
                for (c7 = max(-18 * c3 - c6 + 2 * ((N + 18 * c1 - 18 * c2 + 32) / 4) - 16, 18 * c2 - 2 * ((N + 18 * c1 - 18 * c2 + 32) / 4) - 1); c7 < N - 1; c7 += 1)
                  calc_ping(8 * c1 - 10 * c2 + 2 * ((N + 2 * c1 + 2 * c2) / 4) + 17, c6, c7);
            } else if (N + 18 * c2 + 18 * c3 >= 12 * c1 + 2 && T >= 6 * c1 + 17 && 3 * c2 >= c1 + 1 && N + 6 * c1 >= 18 * c2 + 2 && 2 * c1 >= 3 * c2 + 3 * c3 + 1)
              calc_ping(6 * c1 + 17, 12 * c1 - 18 * c2 - 18 * c3, -6 * c1 + 18 * c2);
          }
    } else
      for (c1 = max(-2, floord(-N + 2, 9)); c1 <= min(floord(N - 1, 9) - 1, 0); c1 += 1)
        for (c2 = max(c1 - (N + 17) / 18 + 2, 0); c2 <= min((N - 1) / 18, c1 + floord(N - 6, 18) + 2); c2 += 1)
          for (c3 = max(max(c1 - c2 - (N + 17) / 18 + 1, -c2 - (N + 12) / 18 - 1), -((N + 6) / 9)); c3 <= min(-1, c1 - c2); c3 += 1)
            for (c6 = max(max(max(1, -18 * c2 - 18 * c3 - 32), -N - 18 * c3 - 14), 18 * c1 - 18 * c2 - 18 * c3 - 1); c6 <= min(min(min(N - 2, 18 * c1 - 18 * c2 - 18 * c3 + 16), -18 * c2 - 18 * c3 + 2), -18 * c3); c6 += 1)
              for (c7 = max(max(-18 * c3 - c6 - 16, 18 * c2 - 1), 1); c7 <= min(min(-18 * c3 - c6 + 1, 18 * c2 + 16), N - 2); c7 += 1)
                calc_ping(1, c6, c7);
}
