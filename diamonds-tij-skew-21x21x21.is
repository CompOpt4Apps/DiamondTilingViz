{
  for (c6 = 0; c6 < N; c6 += 1)
    for (c7 = 0; c7 < N; c7 += 1)
      do_init_pong(c6, c7);
  for (c6 = 0; c6 < N; c6 += 1) {
    do_edge_pong(c6, 0);
    if (c6 + 1 == N)
      for (c7 = 1; c7 < N - 1; c7 += 1)
        do_edge_pong(N - 1, c7);
    if (c6 == 0)
      for (c7 = 1; c7 < N - 1; c7 += 1)
        do_edge_pong(0, c7);
    if (N >= 2)
      do_edge_pong(c6, N - 1);
  }
  startclock();
  if (N >= 3 && T >= 1)
    for (c1 = max(-2, -((2 * N + 15) / 21)); c1 <= T / 7; c1 += 1)
      for (c2 = max(max(max(max(floord(-T - N + 21 * c1 + 1, 42) + 1, c1 - (2 * T + 20) / 21 + 1), 0), floord(-N + 21 * c1 - 18, 63) + 1), floord(c1 + 1, 3)); c2 <= min(min(min(floord(N + 7 * c1 - 10, 21) + 1, (T + N - 2) / 21), c1 + floord(N - 6, 21) + 2), (4 * N + 21 * c1 + 29) / 63); c2 += 1)
        for (c3 = max(max(max(max(max(c1 - c2 - (T + N + 19) / 21 + 1, -c2 - (N + 15) / 21 - 1), c1 - 2 * c2 - (N + 17) / 21), -((2 * N + 15) / 21)), c1 - c2 - (N + 7 * c1 + 11) / 21), -c2 + floord(-N + 7 * c1 + 7 * c2 - 5, 14) + 1); c3 <= min(min(min(min(min(-c2 + floord(c1 + c2, 2), -c2 + (2 * T - 1) / 21), c1 - 2 * c2 + floord(N - 4, 21) + 1), floord(T - 2, 21)), c1 - c2 + floord(-c1 + 1, 3)), c1 - c2); c3 += 1) {
          for (c4 = max(max(max(max(max(max(10 * c2 + 10 * c3 + 2 * floord(c2 + c3, 4) + 1, 6 * c1 + 2 * floord(c1 + 1, 2) - 1), 10 * c1 - 12 * c2 + 2 * floord(c1 + 3 * c2, 4) + 1), -2 * N + 20 * c2 + 2 * floord(N + c2 + 1, 2) + 1), -2 * N + 20 * c1 - 22 * c2 - 22 * c3 + 2 * floord(N + c1 + c2 + c3 + 1, 2) + 1), 1), 20 * c3 + 2 * floord(c3 + 1, 2) + 1); c4 <= min(min(min(min(min(min(21 * c1 - 21 * c2 - 21 * c3 + 18, 21 * c2 + 18), 2 * N + 21 * c3 + 15), T - 1), 10 * c1 - 11 * c2 + floord(N + c1 + c2, 2) + 18), 10 * c2 + 10 * c3 + floord(N + c2 + c3, 2) + 18), 7 * c1 + 19); c4 += 2) {
            for (c6 = max(max(max(1, -21 * c2 - 21 * c3 + 2 * c4 - 40), -N - 21 * c3 + c4 - 18), 21 * c1 - 21 * c2 - 21 * c3 - c4); c6 <= min(min(min(-21 * c3 + c4 - 1, N - 2), 21 * c1 - 21 * c2 - 21 * c3 - c4 + 20), -21 * c2 - 21 * c3 + 2 * c4); c6 += 1)
              for (c7 = max(max(21 * c2 - c4, 1), -21 * c3 + c4 - c6 - 20); c7 <= min(min(-21 * c3 + c4 - c6, N - 2), 21 * c2 - c4 + 20); c7 += 1)
                calc_ping(c4, c6, c7);
            for (c6 = max(max(max(21 * c1 - 21 * c2 - 21 * c3 - c4 - 1, -21 * c2 - 21 * c3 + 2 * c4 - 38), 1), -N - 21 * c3 + c4 - 17); c6 <= min(min(min(21 * c1 - 21 * c2 - 21 * c3 - c4 + 19, -21 * c3 + c4), N - 2), -21 * c2 - 21 * c3 + 2 * c4 + 2); c6 += 1)
              for (c7 = max(max(-21 * c3 + c4 - c6 - 19, 21 * c2 - c4 - 1), 1); c7 <= min(min(-21 * c3 + c4 - c6 + 1, N - 2), 21 * c2 - c4 + 19); c7 += 1)
                calc_pong(c4 + 1, c6, c7);
          }
          if (2 * N + 21 * c3 + 14 >= 2 * ((N + 21 * c2 + 21 * c3 + 38) / 4) && 21 * c2 + 17 >= 2 * ((N + 21 * c2 + 21 * c3 + 38) / 4) && 7 * c1 + 18 >= 2 * ((N + 21 * c2 + 21 * c3 + 38) / 4) && T >= 2 * ((N + 21 * c2 + 21 * c3 + 38) / 4) + 2) {
            for (c6 = max(21 * c1 - 21 * c2 - 21 * c3 - 2 * ((N + 21 * c2 + 21 * c3 + 38) / 4) - 1, -((N + 21 * c2 + 21 * c3 + 38) % 4) + N); c6 < N - 1; c6 += 1)
              for (c7 = -21 * c3 - c6 + 2 * ((N + 21 * c2 + 21 * c3 + 38) / 4) - 19; c7 <= 21 * c2 - 2 * ((N + 21 * c2 + 21 * c3 + 38) / 4) + 19; c7 += 1)
                calc_ping(10 * c2 + 10 * c3 + 2 * ((N + c2 + c3) / 4) + 19, c6, c7);
          } else if (2 * c2 + 2 * floord(c1 - 2 * c2 - 1, 2) + 1 == c1 && 2 * c2 + c3 == c1 && 21 * c2 + 1 >= N + 7 * c1 && T + 42 * c2 >= 2 * N + 21 * c1 + 17)
            calc_ping(2 * N + 21 * c1 - 42 * c2 + 16, N - 2, N - 2);
          if ((T - 1) % 2 == 0 && 7 * c1 + 19 >= T && 21 * c1 + 18 >= T + 21 * c2 + 21 * c3 && N + 21 * c1 + 36 >= 2 * T + 21 * c2 && 21 * c2 + 18 >= T) {
            for (c6 = max(max(max(2 * T - 21 * c2 - 21 * c3 - 40, T - N - 21 * c3 - 18), -T + 21 * c1 - 21 * c2 - 21 * c3), 1); c6 <= min(min(min(N - 2, -T + 21 * c1 - 21 * c2 - 21 * c3 + 20), 2 * T - 21 * c2 - 21 * c3), T - 21 * c3 - 1); c6 += 1)
              for (c7 = max(max(T - 21 * c3 - c6 - 20, -T + 21 * c2), 1); c7 <= min(min(N - 2, T - 21 * c3 - c6), -T + 21 * c2 + 20); c7 += 1)
                calc_ping(T, c6, c7);
          } else {
            if (c2 % 2 == 0 && T >= 21 * c2 + 19 && c1 >= 2 * c2 + c3 + 1) {
              for (c6 = max(21 * c1 - 42 * c2 - 21 * c3 - 19, 21 * c2 - 21 * c3 - 2); c6 <= min(min(21 * c1 - 42 * c2 - 21 * c3 + 1, N - 2), 21 * c2 - 21 * c3 + 18); c6 += 1)
                calc_ping(21 * c2 + 19, c6, 1);
            } else if (21 * c1 + 17 >= 21 * c2 + 21 * c3 + 2 * ((N + 21 * c1 - 21 * c2 + 38) / 4) && 2 * N + 21 * c3 + 15 >= 2 * ((N + 21 * c1 - 21 * c2 + 38) / 4) && 7 * c1 + 18 >= 2 * ((N + 21 * c1 - 21 * c2 + 38) / 4) && T >= 2 * ((N + 21 * c1 - 21 * c2 + 38) / 4) + 1)
              for (c6 = -N - 21 * c3 + 2 * ((N + 21 * c1 - 21 * c2 + 38) / 4) - 17; c6 <= 21 * c1 - 21 * c2 - 21 * c3 - 2 * ((N + 21 * c1 - 21 * c2 + 38) / 4) + 19; c6 += 1)
                for (c7 = max(-21 * c3 - c6 + 2 * ((N + 21 * c1 - 21 * c2 + 38) / 4) - 19, 21 * c2 - 2 * ((N + 21 * c1 - 21 * c2 + 38) / 4) - 1); c7 < N - 1; c7 += 1)
                  calc_ping(10 * c1 - 10 * c2 + 2 * ((N + c1 - c2) / 4) + 19, c6, c7);
            if (2 * floord(c1 - 1, 2) + 1 == c1 && 2 * c1 >= 3 * c2 + 3 * c3 + 1 && N + 21 * c2 + 21 * c3 >= 14 * c1 + 2 && T >= 7 * c1 + 20 && 3 * c2 >= c1 + 1 && N + 7 * c1 >= 21 * c2 + 2)
              calc_ping(7 * c1 + 20, 14 * c1 - 21 * c2 - 21 * c3, -7 * c1 + 21 * c2);
            if ((c1 + c2 - c3 + 1) % 2 == 1 && T + 21 * c2 + 21 * c3 >= 21 * c1 + 19)
              for (c7 = max(max(1, -21 * c1 + 42 * c2 + 21 * c3 - 19), 21 * c1 - 21 * c2 - 42 * c3 - 2); c7 <= min(min(N - 2, 21 * c1 - 21 * c2 - 42 * c3 + 18), -21 * c1 + 42 * c2 + 21 * c3 + 1); c7 += 1)
                calc_ping(21 * c1 - 21 * c2 - 21 * c3 + 19, 1, c7);
          }
        }
}
