{
  for (c6 = 0; c6 < N; c6 += 1)
    for (c7 = 0; c7 < N; c7 += 1)
      do_init_pong(c6, c7);
  for (c6 = 0; c6 < N; c6 += 1) {
    do_edge_pong(c6, 0);
    if (c6 + 1 == N)
      for (c7 = 1; c7 < N - 1; c7 += 1)
        do_edge_pong(N - 1, c7);
    if (c6 == 0)
      for (c7 = 1; c7 < N - 1; c7 += 1)
        do_edge_pong(0, c7);
    if (N >= 2)
      do_edge_pong(c6, N - 1);
  }
  startclock();
  if (T >= 1 && N >= 3)
    for (c1 = max(-2, -((2 * N + 12) / 9) + 1); c1 <= T / 3; c1 += 1)
      for (c2 = max(max(max(max(floord(-T - N + 9 * c1 + 1, 18) + 1, c1 - (2 * T + 8) / 9 + 1), 0), floord(-N + 9 * c1 - 6, 27) + 1), floord(c1 + 1, 3)); c2 <= min(min(min((N + 3 * c1 + 3) / 9, (T + N - 2) / 9), c1 + (N + 3) / 9 + 1), (4 * N + 9 * c1 + 5) / 27); c2 += 1)
        for (c3 = max(max(max(max(max(c1 - c2 - (T + N + 7) / 9 + 1, -c2 - (N + 12) / 9), c1 - 2 * c2 - (N + 5) / 9), -((2 * N + 12) / 9) + 1), c1 - c2 - (N + 3 * c1 + 12) / 9 + 1), -c2 + floord(-N + 3 * c1 + 3 * c2 - 1, 6) + 1); c3 <= min(min(min(min(min(-c2 + floord(c1 + c2, 2), -c2 + (2 * T - 1) / 9), c1 - 2 * c2 + floord(N - 4, 9) + 1), c1 - c2 + floord(-c1 + 1, 3)), floord(T - 2, 9)), c1 - c2); c3 += 1) {
          for (c4 = max(max(max(max(max(max(4 * c2 + 4 * c3 + 2 * floord(c2 + c3, 4) + 1, 2 * c1 + 2 * floord(c1 + 1, 2) - 1), 4 * c1 - 6 * c2 + 2 * floord(c1 + 3 * c2, 4) + 1), -((N + c2 + 1) % 2) - N + 9 * c2 + 2), -((N + c1 + c2 + c3 + 1) % 2) - N + 9 * c1 - 9 * c2 - 9 * c3 + 2), 1), 8 * c3 + 2 * floord(c3 + 1, 2) + 1); c4 <= min(min(min(min(min(min(9 * c1 - 9 * c2 - 9 * c3 + 6, 9 * c2 + 6), 2 * N + 9 * c3 + 3), T - 1), 4 * c1 - 5 * c2 + (N + c1 + c2) / 2 + 6), 4 * c2 + 4 * c3 + (N + c2 + c3) / 2 + 6), 3 * c1 + 7); c4 += 2) {
            for (c6 = max(max(max(1, -9 * c2 - 9 * c3 + 2 * c4 - 16), -N - 9 * c3 + c4 - 6), 9 * c1 - 9 * c2 - 9 * c3 - c4); c6 <= min(min(min(-9 * c3 + c4 - 1, N - 2), 9 * c1 - 9 * c2 - 9 * c3 - c4 + 8), -9 * c2 - 9 * c3 + 2 * c4); c6 += 1)
              for (c7 = max(max(9 * c2 - c4, 1), -9 * c3 + c4 - c6 - 8); c7 <= min(min(N - 2, 9 * c2 - c4 + 8), -9 * c3 + c4 - c6); c7 += 1)
                calc_ping(c4, c6, c7);
            for (c6 = max(max(max(9 * c1 - 9 * c2 - 9 * c3 - c4 - 1, -9 * c2 - 9 * c3 + 2 * c4 - 14), 1), -N - 9 * c3 + c4 - 5); c6 <= min(min(min(9 * c1 - 9 * c2 - 9 * c3 - c4 + 7, -9 * c3 + c4), N - 2), -9 * c2 - 9 * c3 + 2 * c4 + 2); c6 += 1)
              for (c7 = max(max(-9 * c3 + c4 - c6 - 7, 9 * c2 - c4 - 1), 1); c7 <= min(min(-9 * c3 + c4 - c6 + 1, N - 2), 9 * c2 - c4 + 7); c7 += 1)
                calc_pong(c4 + 1, c6, c7);
          }
          if (2 * N + 9 * c3 + 2 >= 2 * ((N + 9 * c2 + 9 * c3 + 14) / 4) && 9 * c2 + 5 >= 2 * ((N + 9 * c2 + 9 * c3 + 14) / 4) && 3 * c1 + 6 >= 2 * ((N + 9 * c2 + 9 * c3 + 14) / 4) && T >= 2 * ((N + 9 * c2 + 9 * c3 + 14) / 4) + 2) {
            for (c6 = max(9 * c1 - 9 * c2 - 9 * c3 - 2 * ((N + 9 * c2 + 9 * c3 + 14) / 4) - 1, -((N + 9 * c2 + 9 * c3 + 14) % 4) + N); c6 < N - 1; c6 += 1)
              for (c7 = -9 * c3 - c6 + 2 * ((N + 9 * c2 + 9 * c3 + 14) / 4) - 7; c7 <= 9 * c2 - 2 * ((N + 9 * c2 + 9 * c3 + 14) / 4) + 7; c7 += 1)
                calc_ping(4 * c2 + 4 * c3 + 2 * ((N + c2 + c3) / 4) + 7, c6, c7);
          } else if (2 * c2 + 2 * floord(c1 - 2 * c2 - 1, 2) + 1 == c1 && 2 * c2 + c3 == c1 && 9 * c2 + 1 >= N + 3 * c1 && T + 18 * c2 >= 2 * N + 9 * c1 + 5 && N + 3 * c1 >= 9 * c2)
            calc_ping(2 * N + 9 * c1 - 18 * c2 + 4, N - 2, N - 2);
          if ((T - 1) % 2 == 0 && 3 * c1 + 7 >= T && 9 * c1 + 6 >= T + 9 * c2 + 9 * c3 && N + 9 * c1 + 12 >= 2 * T + 9 * c2 && 9 * c2 + 6 >= T) {
            for (c6 = max(max(max(2 * T - 9 * c2 - 9 * c3 - 16, T - N - 9 * c3 - 6), -T + 9 * c1 - 9 * c2 - 9 * c3), 1); c6 <= min(min(min(N - 2, -T + 9 * c1 - 9 * c2 - 9 * c3 + 8), 2 * T - 9 * c2 - 9 * c3), T - 9 * c3 - 1); c6 += 1)
              for (c7 = max(max(T - 9 * c3 - c6 - 8, -T + 9 * c2), 1); c7 <= min(min(N - 2, T - 9 * c3 - c6), -T + 9 * c2 + 8); c7 += 1)
                calc_ping(T, c6, c7);
          } else {
            if (c2 % 2 == 0 && T >= 9 * c2 + 7 && c1 >= 2 * c2 + c3 + 1) {
              for (c6 = max(9 * c1 - 18 * c2 - 9 * c3 - 7, 9 * c2 - 9 * c3 - 2); c6 <= min(min(9 * c1 - 18 * c2 - 9 * c3 + 1, N - 2), 9 * c2 - 9 * c3 + 6); c6 += 1)
                calc_ping(9 * c2 + 7, c6, 1);
            } else if (9 * c1 + 5 >= 9 * c2 + 9 * c3 + 2 * ((N + 9 * c1 - 9 * c2 + 14) / 4) && 2 * N + 9 * c3 + 3 >= 2 * ((N + 9 * c1 - 9 * c2 + 14) / 4) && 3 * c1 + 6 >= 2 * ((N + 9 * c1 - 9 * c2 + 14) / 4) && T >= 2 * ((N + 9 * c1 - 9 * c2 + 14) / 4) + 1)
              for (c6 = -N - 9 * c3 + 2 * ((N + 9 * c1 - 9 * c2 + 14) / 4) - 5; c6 <= 9 * c1 - 9 * c2 - 9 * c3 - 2 * ((N + 9 * c1 - 9 * c2 + 14) / 4) + 7; c6 += 1)
                for (c7 = max(-9 * c3 - c6 + 2 * ((N + 9 * c1 - 9 * c2 + 14) / 4) - 7, 9 * c2 - 2 * ((N + 9 * c1 - 9 * c2 + 14) / 4) - 1); c7 < N - 1; c7 += 1)
                  calc_ping(4 * c1 - 4 * c2 + 2 * ((N + c1 - c2) / 4) + 7, c6, c7);
            if (2 * floord(c1 - 1, 2) + 1 == c1 && 2 * c1 >= 3 * c2 + 3 * c3 + 1 && N + 9 * c2 + 9 * c3 >= 6 * c1 + 2 && T >= 3 * c1 + 8 && 3 * c2 >= c1 + 1 && N + 3 * c1 >= 9 * c2 + 2)
              calc_ping(3 * c1 + 8, 6 * c1 - 9 * c2 - 9 * c3, -3 * c1 + 9 * c2);
            if ((c1 + c2 - c3 + 1) % 2 == 1 && T + 9 * c2 + 9 * c3 >= 9 * c1 + 7)
              for (c7 = max(max(1, -9 * c1 + 18 * c2 + 9 * c3 - 7), 9 * c1 - 9 * c2 - 18 * c3 - 2); c7 <= min(min(N - 2, 9 * c1 - 9 * c2 - 18 * c3 + 6), -9 * c1 + 18 * c2 + 9 * c3 + 1); c7 += 1)
                calc_ping(9 * c1 - 9 * c2 - 9 * c3 + 7, 1, c7);
          }
        }
}
