[T, Li, Ui, Lj, Uj] -> { computation[t, i, j] : t >= 1 and t <= -1 + T and i >= Li and i <= -1 + Ui and j >= Lj and j <= -1 + Uj }
for (int c0 = -2; c0 <= 0; c0 += 1)
  for (int c1 = max(floord(Lj + 1, 12), c0 + floord(Lj - 5, 12) + 1); c1 <= min(floord(Uj + 1, 12), c0 + floord(Uj - 5, 12) + 2); c1 += 1)
    for (int c2 = max(max(max(max(max(c0 - 2 * c1 + floord(-Ui + Lj + 1, 12), -c1 + floord(-2 * Ui - Uj + 12 * c0 + 12 * c1 - 9, 24) + 1), c1 + floord(-Ui - 2 * Uj + 3, 12)), floord(-Ui - Uj + 3, 12)), c0 - c1 + floord(-Ui - 2, 12) + 1), -c1 + floord(-Ui + 4, 12) - 1); c2 <= min(min(min(min(min(-c1 + floord(-2 * Li - Lj + 12 * c0 + 12 * c1 + 11, 24), c0 - 2 * c1 + floord(-Li + Uj - 2, 12) + 1), c0 - c1 + floord(-Li - 2, 12) + 1), -c1 + floord(-Li + 4, 12)), floord(-Li - Lj + 2, 12)), c1 + floord(-Li - 2 * Lj - 1, 12) + 1); c2 += 1)
      for (int c3 = max(max(max(max(max(-Uj + 12 * c1 + 1, 1), 6 * c0 - 6 * c1 + floord(Lj + 1, 2)), 6 * c1 + 6 * c2 + floord(Li + 1, 2)), Li + Lj + 12 * c2), -Ui + 12 * c0 - 12 * c1 - 12 * c2 + 1); c3 <= min(min(min(min(min(6 * c1 + 6 * c2 + floord(Ui + 1, 2) + 10, 6 * c0 - 6 * c1 + floord(Uj + 1, 2) + 10), -Lj + 12 * c1 + 11), -Li + 12 * c0 - 12 * c1 - 12 * c2 + 11), Ui + Uj + 12 * c2 + 9), 2); c3 += 1)
        for (int c4 = max(max(max(-12 * c1 - 12 * c2 + 2 * c3 - 22, -Uj - 12 * c2 + c3 - 10), 12 * c0 - 12 * c1 - 12 * c2 - c3), Li); c4 <= min(min(min(12 * c0 - 12 * c1 - 12 * c2 - c3 + 11, -12 * c1 - 12 * c2 + 2 * c3), -Lj - 12 * c2 + c3), Ui - 1); c4 += 1)
          for (int c5 = max(max(12 * c1 - c3, Lj), -12 * c2 + c3 - c4 - 11); c5 <= min(min(Uj - 1, -12 * c2 + c3 - c4), 12 * c1 - c3 + 11); c5 += 1)
            computation(c3, c4, c5);
for (int c0 = -2; c0 <= floord(T, 4); c0 += 1)
  for (int c1 = max(max(floord(Lj + 4 * c0 + 4, 12), c0 + floord(-2 * T + Lj - 1, 12) + 1), floord(Lj + 1, 12)); c1 <= min(min(floord(Uj + 4 * c0 + 6, 12), floord(T + Uj - 1, 12)), c0 + floord(Uj - 5, 12) + 2); c1 += 1)
    for (int c2 = max(max(max(max(max(max(c0 - 2 * c1 + floord(-Ui + Lj + 1, 12), -c1 + floord(-2 * Ui - Uj + 12 * c0 + 12 * c1 - 9, 24) + 1), c1 + floord(-Ui - 2 * Uj + 3, 12)), floord(-Ui - Uj + 3, 12)), c0 - c1 + floord(-Ui - 4 * c0 + 5, 12)), c0 - c1 + floord(-T - Ui, 12) + 1), -c1 + floord(-Ui + 4, 12) - 1); c2 <= min(min(min(min(min(min(c0 - 2 * c1 + floord(-Li + Uj - 2, 12) + 1, c0 - c1 + floord(-Li - 2, 12) + 1), c0 - c1 + floord(-Li - 4 * c0 - 5, 12) + 1), floord(T - Li - Lj, 12)), -c1 + floord(2 * T - Li, 12)), c1 + floord(-Li - 2 * Lj - 1, 12) + 1), -c1 + floord(-2 * Li - Lj + 12 * c0 + 12 * c1 + 11, 24)); c2 += 1)
      for (int c3 = max(max(max(max(max(max(4 * c0, 6 * c0 - 6 * c1 + floord(Lj + 1, 2)), 6 * c1 + 6 * c2 + floord(Li + 1, 2)), Li + Lj + 12 * c2), -Ui + 12 * c0 - 12 * c1 - 12 * c2 + 1), -Uj + 12 * c1 + 1), 1); c3 <= min(min(min(min(min(min(-Lj + 12 * c1 + 11, -Li + 12 * c0 - 12 * c1 - 12 * c2 + 11), Ui + Uj + 12 * c2 + 9), T), 6 * c1 + 6 * c2 + floord(Ui + 1, 2) + 10), 6 * c0 - 6 * c1 + floord(Uj + 1, 2) + 10), 4 * c0 + 11); c3 += 1)
        for (int c4 = max(max(max(-12 * c1 - 12 * c2 + 2 * c3 - 22, -Uj - 12 * c2 + c3 - 10), 12 * c0 - 12 * c1 - 12 * c2 - c3), Li); c4 <= min(min(min(12 * c0 - 12 * c1 - 12 * c2 - c3 + 11, -12 * c1 - 12 * c2 + 2 * c3), -Lj - 12 * c2 + c3), Ui - 1); c4 += 1)
          for (int c5 = max(max(12 * c1 - c3, Lj), -12 * c2 + c3 - c4 - 11); c5 <= min(min(Uj - 1, -12 * c2 + c3 - c4), 12 * c1 - c3 + 11); c5 += 1)
            computation(c3, c4, c5);
for (int c0 = -1; c0 <= T; c0 += 1)
  for (int c1 = max(max(floord(Lj + c0 + 1, 3), -T + c0 + floord(T + Lj - 1, 3) + 1), floord(Lj + 1, 3)); c1 <= min(min(floord(Uj + c0, 3), floord(T + Uj - 1, 3)), c0 + floord(Uj + 1, 3)); c1 += 1)
    for (int c2 = max(max(max(-c1 + floord(-2 * Ui - Uj + 3 * c0 + 3 * c1, 6) + 1, c0 - c1 + floord(-Ui - c0 - 1, 3) + 1), c0 - c1 + floord(-T - Ui, 3) + 1), -c1 + floord(-Ui + 1, 3)); c2 <= min(min(min(-Lj + c1 + floord(-Li + Lj - 1, 3) + 1, c0 - c1 + floord(-Li + 1, 3)), c0 - c1 + floord(-Li - c0 + 1, 3)), T - c1 + floord(-T - Li, 3)); c2 += 1)
      for (int c3 = max(max(max(max(max(-Uj + 3 * c1 + 1, c0), c0 - 2 * c1 + floord(Lj + c0 + c1 + 1, 2)), c1 + c2 + floord(Li + c1 + c2 + 1, 2)), 1), -Ui + 3 * c0 - 3 * c1 - 3 * c2 + 1); c3 <= min(min(min(min(min(-Lj + 3 * c1 + 2, -Li + 3 * c0 - 3 * c1 - 3 * c2 + 2), T), c1 + c2 + floord(Ui + c1 + c2 + 1, 2) + 1), c0 - 2 * c1 + floord(Uj + c0 + c1 + 1, 2) + 1), c0 + 2); c3 += 1)
        for (int c4 = max(max(max(-3 * c1 - 3 * c2 + 2 * c3 - 4, -Uj - 3 * c2 + c3 - 1), 3 * c0 - 3 * c1 - 3 * c2 - c3), Li); c4 <= min(min(min(3 * c0 - 3 * c1 - 3 * c2 - c3 + 2, -3 * c1 - 3 * c2 + 2 * c3), -Lj - 3 * c2 + c3), Ui - 1); c4 += 1)
          for (int c5 = max(max(3 * c1 - c3, Lj), -3 * c2 + c3 - c4 - 2); c5 <= min(min(Uj - 1, -3 * c2 + c3 - c4), 3 * c1 - c3 + 2); c5 += 1)
            computation(c3, c4, c5);
for (int c0 = -2; c0 <= floord(T, 2); c0 += 1)
  for (int c1 = max(max(floord(Lj + 2 * c0 + 2, 6), c0 + floord(-2 * T + Lj - 1, 6) + 1), floord(Lj + 1, 6)); c1 <= min(min(floord(Uj + 2 * c0 + 2, 6), floord(T + Uj - 1, 6)), c0 + floord(Uj + 1, 6) + 1); c1 += 1)
    for (int c2 = max(max(max(max(max(max(c0 - 2 * c1 + floord(-Ui + Lj + 1, 6), -c1 + floord(-2 * Ui - Uj + 6 * c0 + 6 * c1 - 3, 12) + 1), c1 + floord(-Ui - 2 * Uj + 3, 6)), floord(-Ui - Uj + 3, 6)), c0 - c1 + floord(-Ui - 2 * c0 + 3, 6)), c0 - c1 + floord(-T - Ui, 6) + 1), -c1 + floord(-Ui - 2, 6)); c2 <= min(min(min(min(min(min(c0 - 2 * c1 + floord(-Li + Uj - 2, 6) + 1, c0 - c1 + floord(-Li - 2, 6) + 1), c0 - c1 + floord(-Li - 2 * c0 + 3, 6)), floord(T - Li - Lj, 6)), -c1 + floord(2 * T - Li, 6)), c1 + floord(-Li - 2 * Lj - 1, 6) + 1), -c1 + floord(-2 * Li - Lj + 6 * c0 + 6 * c1 + 5, 12)); c2 += 1)
      for (int c3 = max(max(max(max(max(max(2 * c0, 3 * c0 - 3 * c1 + floord(Lj + 1, 2)), 3 * c1 + 3 * c2 + floord(Li + 1, 2)), Li + Lj + 6 * c2), -Ui + 6 * c0 - 6 * c1 - 6 * c2 + 1), -Uj + 6 * c1 + 1), 1); c3 <= min(min(min(min(min(min(-Lj + 6 * c1 + 5, -Li + 6 * c0 - 6 * c1 - 6 * c2 + 5), Ui + Uj + 6 * c2 + 3), T), 3 * c1 + 3 * c2 + floord(Ui + 1, 2) + 4), 3 * c0 - 3 * c1 + floord(Uj + 1, 2) + 4), 2 * c0 + 5); c3 += 1)
        for (int c4 = max(max(max(-6 * c1 - 6 * c2 + 2 * c3 - 10, -Uj - 6 * c2 + c3 - 4), 6 * c0 - 6 * c1 - 6 * c2 - c3), Li); c4 <= min(min(min(6 * c0 - 6 * c1 - 6 * c2 - c3 + 5, -6 * c1 - 6 * c2 + 2 * c3), -Lj - 6 * c2 + c3), Ui - 1); c4 += 1)
          for (int c5 = max(max(6 * c1 - c3, Lj), -6 * c2 + c3 - c4 - 5); c5 <= min(min(Uj - 1, -6 * c2 + c3 - c4), 6 * c1 - c3 + 5); c5 += 1)
            computation(c3, c4, c5);
for (int c0 = -2; c0 <= floord(T, 3); c0 += 1)
  for (int c1 = max(max(floord(Lj + 3 * c0 + 3, 9), c0 + floord(-2 * T + Lj - 1, 9) + 1), floord(Lj + 1, 9)); c1 <= min(min(floord(Uj + 3 * c0 + 4, 9), floord(T + Uj - 1, 9)), c0 + floord(Uj + 4, 9) + 1); c1 += 1)
    for (int c2 = max(max(max(max(max(max(c0 - 2 * c1 + floord(-Ui + Lj + 1, 9), -c1 + floord(-2 * Ui - Uj + 9 * c0 + 9 * c1 - 6, 18) + 1), c1 + floord(-Ui - 2 * Uj + 3, 9)), floord(-Ui - Uj + 3, 9)), c0 - c1 + floord(-Ui - 3 * c0 + 4, 9)), c0 - c1 + floord(-T - Ui, 9) + 1), -c1 + floord(-Ui + 4, 9) - 1); c2 <= min(min(min(min(min(min(c0 - 2 * c1 + floord(-Li + Uj - 2, 9) + 1, c0 - c1 + floord(-Li - 2, 9) + 1), c0 - c1 + floord(-Li - 3 * c0 - 4, 9) + 1), floord(T - Li - Lj, 9)), -c1 + floord(2 * T - Li, 9)), c1 + floord(-Li - 2 * Lj - 1, 9) + 1), -c1 + floord(-2 * Li - Lj + 9 * c0 + 9 * c1 + 8, 18)); c2 += 1)
      for (int c3 = max(max(max(max(max(max(3 * c0, 4 * c0 - 5 * c1 + floord(Lj + c0 + c1 + 1, 2)), 4 * c1 + 4 * c2 + floord(Li + c1 + c2 + 1, 2)), Li + Lj + 9 * c2), -Ui + 9 * c0 - 9 * c1 - 9 * c2 + 1), -Uj + 9 * c1 + 1), 1); c3 <= min(min(min(min(min(min(-Lj + 9 * c1 + 8, -Li + 9 * c0 - 9 * c1 - 9 * c2 + 8), Ui + Uj + 9 * c2 + 6), T), 4 * c1 + 4 * c2 + floord(Ui + c1 + c2 + 1, 2) + 7), 4 * c0 - 5 * c1 + floord(Uj + c0 + c1 + 1, 2) + 7), 3 * c0 + 8); c3 += 1)
        for (int c4 = max(max(max(-9 * c1 - 9 * c2 + 2 * c3 - 16, -Uj - 9 * c2 + c3 - 7), 9 * c0 - 9 * c1 - 9 * c2 - c3), Li); c4 <= min(min(min(9 * c0 - 9 * c1 - 9 * c2 - c3 + 8, -9 * c1 - 9 * c2 + 2 * c3), -Lj - 9 * c2 + c3), Ui - 1); c4 += 1)
          for (int c5 = max(max(9 * c1 - c3, Lj), -9 * c2 + c3 - c4 - 8); c5 <= min(min(Uj - 1, -9 * c2 + c3 - c4), 9 * c1 - c3 + 8); c5 += 1)
            computation(c3, c4, c5);
for (int c0 = -2; c0 <= floord(T, 5); c0 += 1)
  for (int c1 = max(max(floord(Lj + 5 * c0 + 5, 15), c0 + floord(-2 * T + Lj - 1, 15) + 1), floord(Lj + 1, 15)); c1 <= min(min(floord(Uj + 5 * c0 - 7, 15) + 1, floord(T + Uj - 1, 15)), c0 + floord(Uj - 5, 15) + 2); c1 += 1)
    for (int c2 = max(max(max(max(max(max(c0 - 2 * c1 + floord(-Ui + Lj + 1, 15), -c1 + floord(-2 * Ui - Uj + 15 * c0 + 15 * c1 - 12, 30) + 1), c1 + floord(-Ui - 2 * Uj + 3, 15)), floord(-Ui - Uj + 3, 15)), c0 - c1 + floord(-Ui - 5 * c0 + 6, 15)), c0 - c1 + floord(-T - Ui, 15) + 1), -c1 + floord(-Ui + 4, 15) - 1); c2 <= min(min(min(min(min(min(c0 - 2 * c1 + floord(-Li + Uj - 2, 15) + 1, c0 - c1 + floord(-Li - 2, 15) + 1), c0 - c1 + floord(-Li - 5 * c0 - 6, 15) + 1), floord(T - Li - Lj, 15)), -c1 + floord(2 * T - Li, 15)), c1 + floord(-Li - 2 * Lj - 1, 15) + 1), -c1 + floord(-2 * Li - Lj + 15 * c0 + 15 * c1 + 14, 30)); c2 += 1)
      for (int c3 = max(max(max(max(max(max(5 * c0, 7 * c0 - 8 * c1 + floord(Lj + c0 + c1 + 1, 2)), 7 * c1 + 7 * c2 + floord(Li + c1 + c2 + 1, 2)), Li + Lj + 15 * c2), -Ui + 15 * c0 - 15 * c1 - 15 * c2 + 1), -Uj + 15 * c1 + 1), 1); c3 <= min(min(min(min(min(min(-Lj + 15 * c1 + 14, -Li + 15 * c0 - 15 * c1 - 15 * c2 + 14), Ui + Uj + 15 * c2 + 12), T), 7 * c1 + 7 * c2 + floord(Ui + c1 + c2 + 1, 2) + 13), 7 * c0 - 8 * c1 + floord(Uj + c0 + c1 + 1, 2) + 13), 5 * c0 + 14); c3 += 1)
        for (int c4 = max(max(max(-15 * c1 - 15 * c2 + 2 * c3 - 28, -Uj - 15 * c2 + c3 - 13), 15 * c0 - 15 * c1 - 15 * c2 - c3), Li); c4 <= min(min(min(15 * c0 - 15 * c1 - 15 * c2 - c3 + 14, -15 * c1 - 15 * c2 + 2 * c3), -Lj - 15 * c2 + c3), Ui - 1); c4 += 1)
          for (int c5 = max(max(15 * c1 - c3, Lj), -15 * c2 + c3 - c4 - 14); c5 <= min(min(Uj - 1, -15 * c2 + c3 - c4), 15 * c1 - c3 + 14); c5 += 1)
            computation(c3, c4, c5);
for (int c0 = -2; c0 <= floord(T, 6); c0 += 1)
  for (int c1 = max(max(floord(Lj + 6 * c0 + 6, 18), c0 + floord(-2 * T + Lj - 1, 18) + 1), floord(Lj + 1, 18)); c1 <= min(min(floord(Uj + 6 * c0 - 8, 18) + 1, floord(T + Uj - 1, 18)), c0 + floord(Uj - 5, 18) + 2); c1 += 1)
    for (int c2 = max(max(max(max(max(max(c0 - 2 * c1 + floord(-Ui + Lj + 1, 18), -c1 + floord(-2 * Ui - Uj + 18 * c0 + 18 * c1 - 15, 36) + 1), c1 + floord(-Ui - 2 * Uj + 3, 18)), floord(-Ui - Uj + 3, 18)), c0 - c1 + floord(-Ui - 6 * c0 + 7, 18)), c0 - c1 + floord(-T - Ui, 18) + 1), -c1 + floord(-Ui + 4, 18) - 1); c2 <= min(min(min(min(min(min(c0 - 2 * c1 + floord(-Li + Uj - 2, 18) + 1, c0 - c1 + floord(-Li - 2, 18) + 1), c0 - c1 + floord(-Li - 6 * c0 - 7, 18) + 1), floord(T - Li - Lj, 18)), -c1 + floord(2 * T - Li, 18)), c1 + floord(-Li - 2 * Lj - 1, 18) + 1), -c1 + floord(-2 * Li - Lj + 18 * c0 + 18 * c1 + 17, 36)); c2 += 1)
      for (int c3 = max(max(max(max(max(max(6 * c0, 9 * c0 - 9 * c1 + floord(Lj + 1, 2)), 9 * c1 + 9 * c2 + floord(Li + 1, 2)), Li + Lj + 18 * c2), -Ui + 18 * c0 - 18 * c1 - 18 * c2 + 1), -Uj + 18 * c1 + 1), 1); c3 <= min(min(min(min(min(min(-Lj + 18 * c1 + 17, -Li + 18 * c0 - 18 * c1 - 18 * c2 + 17), Ui + Uj + 18 * c2 + 15), T), 9 * c1 + 9 * c2 + floord(Ui + 1, 2) + 16), 9 * c0 - 9 * c1 + floord(Uj + 1, 2) + 16), 6 * c0 + 17); c3 += 1)
        for (int c4 = max(max(max(-18 * c1 - 18 * c2 + 2 * c3 - 34, -Uj - 18 * c2 + c3 - 16), 18 * c0 - 18 * c1 - 18 * c2 - c3), Li); c4 <= min(min(min(18 * c0 - 18 * c1 - 18 * c2 - c3 + 17, -18 * c1 - 18 * c2 + 2 * c3), -Lj - 18 * c2 + c3), Ui - 1); c4 += 1)
          for (int c5 = max(max(18 * c1 - c3, Lj), -18 * c2 + c3 - c4 - 17); c5 <= min(min(Uj - 1, -18 * c2 + c3 - c4), 18 * c1 - c3 + 17); c5 += 1)
            computation(c3, c4, c5);
for (int c0 = -2; c0 <= floord(T, 7); c0 += 1)
  for (int c1 = max(max(floord(Lj + 7 * c0 + 7, 21), c0 + floord(-2 * T + Lj - 1, 21) + 1), floord(Lj + 1, 21)); c1 <= min(min(floord(Uj + 7 * c0 - 9, 21) + 1, floord(T + Uj - 1, 21)), c0 + floord(Uj - 5, 21) + 2); c1 += 1)
    for (int c2 = max(max(max(max(max(max(c0 - 2 * c1 + floord(-Ui + Lj + 1, 21), -c1 + floord(-2 * Ui - Uj + 21 * c0 + 21 * c1 - 18, 42) + 1), c1 + floord(-Ui - 2 * Uj + 3, 21)), floord(-Ui - Uj + 3, 21)), c0 - c1 + floord(-Ui - 7 * c0 + 8, 21)), c0 - c1 + floord(-T - Ui, 21) + 1), -c1 + floord(-Ui + 4, 21) - 1); c2 <= min(min(min(min(min(min(c0 - 2 * c1 + floord(-Li + Uj - 2, 21) + 1, c0 - c1 + floord(-Li - 2, 21) + 1), c0 - c1 + floord(-Li - 7 * c0 - 8, 21) + 1), floord(T - Li - Lj, 21)), -c1 + floord(2 * T - Li, 21)), c1 + floord(-Li - 2 * Lj - 1, 21) + 1), -c1 + floord(-2 * Li - Lj + 21 * c0 + 21 * c1 + 20, 42)); c2 += 1)
      for (int c3 = max(max(max(max(max(max(7 * c0, 10 * c0 - 11 * c1 + floord(Lj + c0 + c1 + 1, 2)), 10 * c1 + 10 * c2 + floord(Li + c1 + c2 + 1, 2)), Li + Lj + 21 * c2), -Ui + 21 * c0 - 21 * c1 - 21 * c2 + 1), -Uj + 21 * c1 + 1), 1); c3 <= min(min(min(min(min(min(-Lj + 21 * c1 + 20, -Li + 21 * c0 - 21 * c1 - 21 * c2 + 20), Ui + Uj + 21 * c2 + 18), T), 10 * c1 + 10 * c2 + floord(Ui + c1 + c2 + 1, 2) + 19), 10 * c0 - 11 * c1 + floord(Uj + c0 + c1 + 1, 2) + 19), 7 * c0 + 20); c3 += 1)
        for (int c4 = max(max(max(-21 * c1 - 21 * c2 + 2 * c3 - 40, -Uj - 21 * c2 + c3 - 19), 21 * c0 - 21 * c1 - 21 * c2 - c3), Li); c4 <= min(min(min(21 * c0 - 21 * c1 - 21 * c2 - c3 + 20, -21 * c1 - 21 * c2 + 2 * c3), -Lj - 21 * c2 + c3), Ui - 1); c4 += 1)
          for (int c5 = max(max(21 * c1 - c3, Lj), -21 * c2 + c3 - c4 - 20); c5 <= min(min(Uj - 1, -21 * c2 + c3 - c4), 21 * c1 - c3 + 20); c5 += 1)
            computation(c3, c4, c5);
for (int c0 = -2; c0 <= floord(T, 8); c0 += 1)
  for (int c1 = max(max(floord(Lj + 8 * c0 + 8, 24), c0 + floord(-2 * T + Lj - 1, 24) + 1), floord(Lj + 1, 24)); c1 <= min(min(floord(Uj + 8 * c0 - 10, 24) + 1, floord(T + Uj - 1, 24)), c0 + floord(Uj - 5, 24) + 2); c1 += 1)
    for (int c2 = max(max(max(max(max(max(c0 - 2 * c1 + floord(-Ui + Lj + 1, 24), -c1 + floord(-2 * Ui - Uj + 24 * c0 + 24 * c1 - 21, 48) + 1), c1 + floord(-Ui - 2 * Uj + 3, 24)), floord(-Ui - Uj + 3, 24)), c0 - c1 + floord(-Ui - 8 * c0 + 9, 24)), c0 - c1 + floord(-T - Ui, 24) + 1), -c1 + floord(-Ui + 4, 24) - 1); c2 <= min(min(min(min(min(min(c0 - 2 * c1 + floord(-Li + Uj - 2, 24) + 1, c0 - c1 + floord(-Li - 2, 24) + 1), c0 - c1 + floord(-Li - 8 * c0 - 9, 24) + 1), floord(T - Li - Lj, 24)), -c1 + floord(2 * T - Li, 24)), c1 + floord(-Li - 2 * Lj - 1, 24) + 1), -c1 + floord(-2 * Li - Lj + 24 * c0 + 24 * c1 + 23, 48)); c2 += 1)
      for (int c3 = max(max(max(max(max(max(8 * c0, 12 * c0 - 12 * c1 + floord(Lj + 1, 2)), 12 * c1 + 12 * c2 + floord(Li + 1, 2)), Li + Lj + 24 * c2), -Ui + 24 * c0 - 24 * c1 - 24 * c2 + 1), -Uj + 24 * c1 + 1), 1); c3 <= min(min(min(min(min(min(-Lj + 24 * c1 + 23, -Li + 24 * c0 - 24 * c1 - 24 * c2 + 23), Ui + Uj + 24 * c2 + 21), T), 12 * c1 + 12 * c2 + floord(Ui + 1, 2) + 22), 12 * c0 - 12 * c1 + floord(Uj + 1, 2) + 22), 8 * c0 + 23); c3 += 1)
        for (int c4 = max(max(max(-24 * c1 - 24 * c2 + 2 * c3 - 46, -Uj - 24 * c2 + c3 - 22), 24 * c0 - 24 * c1 - 24 * c2 - c3), Li); c4 <= min(min(min(24 * c0 - 24 * c1 - 24 * c2 - c3 + 23, -24 * c1 - 24 * c2 + 2 * c3), -Lj - 24 * c2 + c3), Ui - 1); c4 += 1)
          for (int c5 = max(max(24 * c1 - c3, Lj), -24 * c2 + c3 - c4 - 23); c5 <= min(min(Uj - 1, -24 * c2 + c3 - c4), 24 * c1 - c3 + 23); c5 += 1)
            computation(c3, c4, c5);
for (int c0 = -2; c0 <= floord(T, 9); c0 += 1)
  for (int c1 = max(max(floord(Lj + 9 * c0 + 9, 27), c0 + floord(-2 * T + Lj - 1, 27) + 1), floord(Lj + 1, 27)); c1 <= min(min(floord(Uj + 9 * c0 - 11, 27) + 1, floord(T + Uj - 1, 27)), c0 + floord(Uj - 5, 27) + 2); c1 += 1)
    for (int c2 = max(max(max(max(max(max(c0 - 2 * c1 + floord(-Ui + Lj + 1, 27), -c1 + floord(-2 * Ui - Uj + 27 * c0 + 27 * c1 - 24, 54) + 1), c1 + floord(-Ui - 2 * Uj + 3, 27)), floord(-Ui - Uj + 3, 27)), c0 - c1 + floord(-Ui - 9 * c0 + 10, 27)), c0 - c1 + floord(-T - Ui, 27) + 1), -c1 + floord(-Ui + 4, 27) - 1); c2 <= min(min(min(min(min(min(c0 - 2 * c1 + floord(-Li + Uj - 2, 27) + 1, c0 - c1 + floord(-Li - 2, 27) + 1), c0 - c1 + floord(-Li - 9 * c0 - 10, 27) + 1), floord(T - Li - Lj, 27)), -c1 + floord(2 * T - Li, 27)), c1 + floord(-Li - 2 * Lj - 1, 27) + 1), -c1 + floord(-2 * Li - Lj + 27 * c0 + 27 * c1 + 26, 54)); c2 += 1)
      for (int c3 = max(max(max(max(max(max(9 * c0, 13 * c0 - 14 * c1 + floord(Lj + c0 + c1 + 1, 2)), 13 * c1 + 13 * c2 + floord(Li + c1 + c2 + 1, 2)), Li + Lj + 27 * c2), -Ui + 27 * c0 - 27 * c1 - 27 * c2 + 1), -Uj + 27 * c1 + 1), 1); c3 <= min(min(min(min(min(min(-Lj + 27 * c1 + 26, -Li + 27 * c0 - 27 * c1 - 27 * c2 + 26), Ui + Uj + 27 * c2 + 24), T), 13 * c1 + 13 * c2 + floord(Ui + c1 + c2 + 1, 2) + 25), 13 * c0 - 14 * c1 + floord(Uj + c0 + c1 + 1, 2) + 25), 9 * c0 + 26); c3 += 1)
        for (int c4 = max(max(max(-27 * c1 - 27 * c2 + 2 * c3 - 52, -Uj - 27 * c2 + c3 - 25), 27 * c0 - 27 * c1 - 27 * c2 - c3), Li); c4 <= min(min(min(27 * c0 - 27 * c1 - 27 * c2 - c3 + 26, -27 * c1 - 27 * c2 + 2 * c3), -Lj - 27 * c2 + c3), Ui - 1); c4 += 1)
          for (int c5 = max(max(27 * c1 - c3, Lj), -27 * c2 + c3 - c4 - 26); c5 <= min(min(Uj - 1, -27 * c2 + c3 - c4), 27 * c1 - c3 + 26); c5 += 1)
            computation(c3, c4, c5);
for (int c0 = -2; c0 <= floord(T, 10); c0 += 1)
  for (int c1 = max(max(floord(Lj + 10 * c0 + 10, 30), c0 + floord(-2 * T + Lj - 1, 30) + 1), floord(Lj + 1, 30)); c1 <= min(min(floord(Uj + 10 * c0 - 12, 30) + 1, floord(T + Uj - 1, 30)), c0 + floord(Uj - 5, 30) + 2); c1 += 1)
    for (int c2 = max(max(max(max(max(max(c0 - 2 * c1 + floord(-Ui + Lj + 1, 30), -c1 + floord(-2 * Ui - Uj + 30 * c0 + 30 * c1 - 27, 60) + 1), c1 + floord(-Ui - 2 * Uj + 3, 30)), floord(-Ui - Uj + 3, 30)), c0 - c1 + floord(-Ui - 10 * c0 + 11, 30)), c0 - c1 + floord(-T - Ui, 30) + 1), -c1 + floord(-Ui + 4, 30) - 1); c2 <= min(min(min(min(min(min(c0 - 2 * c1 + floord(-Li + Uj - 2, 30) + 1, c0 - c1 + floord(-Li - 2, 30) + 1), c0 - c1 + floord(-Li - 10 * c0 - 11, 30) + 1), floord(T - Li - Lj, 30)), -c1 + floord(2 * T - Li, 30)), c1 + floord(-Li - 2 * Lj - 1, 30) + 1), -c1 + floord(-2 * Li - Lj + 30 * c0 + 30 * c1 + 29, 60)); c2 += 1)
      for (int c3 = max(max(max(max(max(max(10 * c0, 15 * c0 - 15 * c1 + floord(Lj + 1, 2)), 15 * c1 + 15 * c2 + floord(Li + 1, 2)), Li + Lj + 30 * c2), -Ui + 30 * c0 - 30 * c1 - 30 * c2 + 1), -Uj + 30 * c1 + 1), 1); c3 <= min(min(min(min(min(min(-Lj + 30 * c1 + 29, -Li + 30 * c0 - 30 * c1 - 30 * c2 + 29), Ui + Uj + 30 * c2 + 27), T), 15 * c1 + 15 * c2 + floord(Ui + 1, 2) + 28), 15 * c0 - 15 * c1 + floord(Uj + 1, 2) + 28), 10 * c0 + 29); c3 += 1)
        for (int c4 = max(max(max(-30 * c1 - 30 * c2 + 2 * c3 - 58, -Uj - 30 * c2 + c3 - 28), 30 * c0 - 30 * c1 - 30 * c2 - c3), Li); c4 <= min(min(min(30 * c0 - 30 * c1 - 30 * c2 - c3 + 29, -30 * c1 - 30 * c2 + 2 * c3), -Lj - 30 * c2 + c3), Ui - 1); c4 += 1)
          for (int c5 = max(max(30 * c1 - c3, Lj), -30 * c2 + c3 - c4 - 29); c5 <= min(min(Uj - 1, -30 * c2 + c3 - c4), 30 * c1 - c3 + 29); c5 += 1)
            computation(c3, c4, c5);
for (int c0 = -2; c0 <= floord(T, 11); c0 += 1)
  for (int c1 = max(max(floord(Lj + 11 * c0 + 11, 33), c0 + floord(-2 * T + Lj - 1, 33) + 1), floord(Lj + 1, 33)); c1 <= min(min(floord(Uj + 11 * c0 - 13, 33) + 1, floord(T + Uj - 1, 33)), c0 + floord(Uj - 5, 33) + 2); c1 += 1)
    for (int c2 = max(max(max(max(max(max(c0 - 2 * c1 + floord(-Ui + Lj + 1, 33), -c1 + floord(-2 * Ui - Uj + 33 * c0 + 33 * c1 - 30, 66) + 1), c1 + floord(-Ui - 2 * Uj + 3, 33)), floord(-Ui - Uj + 3, 33)), c0 - c1 + floord(-Ui - 11 * c0 + 12, 33)), c0 - c1 + floord(-T - Ui, 33) + 1), -c1 + floord(-Ui + 4, 33) - 1); c2 <= min(min(min(min(min(min(c0 - 2 * c1 + floord(-Li + Uj - 2, 33) + 1, c0 - c1 + floord(-Li - 2, 33) + 1), c0 - c1 + floord(-Li - 11 * c0 - 12, 33) + 1), floord(T - Li - Lj, 33)), -c1 + floord(2 * T - Li, 33)), c1 + floord(-Li - 2 * Lj - 1, 33) + 1), -c1 + floord(-2 * Li - Lj + 33 * c0 + 33 * c1 + 32, 66)); c2 += 1)
      for (int c3 = max(max(max(max(max(max(11 * c0, 16 * c0 - 17 * c1 + floord(Lj + c0 + c1 + 1, 2)), 16 * c1 + 16 * c2 + floord(Li + c1 + c2 + 1, 2)), Li + Lj + 33 * c2), -Ui + 33 * c0 - 33 * c1 - 33 * c2 + 1), -Uj + 33 * c1 + 1), 1); c3 <= min(min(min(min(min(min(-Lj + 33 * c1 + 32, -Li + 33 * c0 - 33 * c1 - 33 * c2 + 32), Ui + Uj + 33 * c2 + 30), T), 16 * c1 + 16 * c2 + floord(Ui + c1 + c2 + 1, 2) + 31), 16 * c0 - 17 * c1 + floord(Uj + c0 + c1 + 1, 2) + 31), 11 * c0 + 32); c3 += 1)
        for (int c4 = max(max(max(-33 * c1 - 33 * c2 + 2 * c3 - 64, -Uj - 33 * c2 + c3 - 31), 33 * c0 - 33 * c1 - 33 * c2 - c3), Li); c4 <= min(min(min(33 * c0 - 33 * c1 - 33 * c2 - c3 + 32, -33 * c1 - 33 * c2 + 2 * c3), -Lj - 33 * c2 + c3), Ui - 1); c4 += 1)
          for (int c5 = max(max(33 * c1 - c3, Lj), -33 * c2 + c3 - c4 - 32); c5 <= min(min(Uj - 1, -33 * c2 + c3 - c4), 33 * c1 - c3 + 32); c5 += 1)
            computation(c3, c4, c5);
